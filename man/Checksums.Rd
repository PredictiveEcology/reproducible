% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checksums.R
\docType{methods}
\name{Checksums}
\alias{Checksums}
\alias{Checksums,character,character,logical-method}
\alias{Checksums,character,character,missing-method}
\alias{Checksums,missing,character,logical-method}
\title{Calculate checksums for a module's data files}
\usage{
Checksums(module, path, write, quickCheck = FALSE,
  checksumFile = file.path(path, "CHECKSUMS.txt"), files = NULL, ...)

\S4method{Checksums}{character,character,logical}(module, path, write,
  quickCheck = FALSE, checksumFile = file.path(path, "CHECKSUMS.txt"),
  files = NULL, ...)

\S4method{Checksums}{character,character,missing}(module, path, write,
  quickCheck = FALSE, checksumFile = file.path(path, "CHECKSUMS.txt"),
  files = NULL, ...)

\S4method{Checksums}{missing,character,logical}(module, path, write,
  quickCheck = FALSE, checksumFile = file.path(path, "CHECKSUMS.txt"),
  files = NULL, ...)
}
\arguments{
\item{module}{Character string giving the name of the module.}

\item{path}{Character string giving the path to the module directory.}

\item{write}{Logical indicating whether to overwrite \code{CHECKSUMS.txt}.
Default is \code{FALSE}, as users should not change this file.
Module developers should write this file prior to distributing
their module code, and update accordingly when the data change.}

\item{checksumFile}{The filename of the checksums file to read or write to.
The default is \file{CHECKSUMS.txt} located at
\code{file.path(path, module, "data", checksumFile)}.
It is likely not a good idea to change this, and should
only be used in cases such as \code{Cache}, which can
evaluate if the \code{checksumFile} has changed.}

\item{...}{Passed to \code{\link[digest]{digest}} and \code{\link[utils]{write.table}}.
For \code{digest}, the notable argument is \code{algo}. For \code{write.table},
the notable argument is \code{append}.}
}
\value{
A \code{data.frame} with columns: \code{result}, \code{expectedFile},
        \code{actualFile}, and \code{checksum}.
}
\description{
Verify (and optionally write) checksums for data files in a module's
\code{data/} subdirectory. The file \code{data/CHECKSUMS.txt} contains the
expected checksums for each data file.
Checksums are computed using \code{SpaDES.tools:::.digest}, which is simply a
wrapper around \code{digest::digest}.
}
\details{
Modules may require data that for various reasons cannot be distributed with
the module source code. In these cases, the module developer should ensure
that the module downloads and extracts the data required. It is useful to not
only check that the data files exist locally but that their checksums match
those expected. See also \code{\link{downloadData}}.
}
\note{
In version 1.2.0 and earlier, two checksums per file were required
because of differences in the checksum hash values on Windows and Unix-like
platforms. Recent versions use a different (faster) algorithm and only require
one checksum value per file.
To update your \file{CHECKSUMS.txt} files using the new algorithm, see
\url{https://github.com/PredictiveEcology/SpaDES/issues/295#issuecomment-246513405}.
}
\examples{
\dontrun{
moduleName <- "my_module"
modulePath <- file.path("path", "to", "modules")

## verify checksums of all data files
Checksums(moduleName, modulePath)

## write new CHECKSUMS.txt file

# 1. verify that all data files are present (and no extra files are present)
list.files(file.path(modulePath, moduleName, "data"))

# 2. calculate file checksums and write to file (this will overwrite CHECKSUMS.txt)
Checksums(moduleName, modulePath, write = TRUE)
}

}
\author{
Alex Chubaty
}
