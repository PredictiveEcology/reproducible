% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DBI.R
\name{createCache}
\alias{createCache}
\alias{saveToCache}
\alias{loadFromCache}
\alias{rmFromCache}
\title{Create a new cache}
\usage{
createCache(
  cachePath = getOption("reproducible.cachePath"),
  drv = getOption("reproducible.drv"),
  conn = getOption("reproducible.conn", NULL),
  force = FALSE
)

saveToCache(
  cachePath = getOption("reproducible.cachePath"),
  drv = getOption("reproducible.drv"),
  conn = getOption("reproducible.conn", NULL),
  obj,
  userTags,
  cacheId,
  linkToCacheId = NULL
)

loadFromCache(
  cachePath = getOption("reproducible.cachePath"),
  cacheId,
  format = getOption("reproducible.cacheSaveFormat", "rds"),
  sideEffect = FALSE,
  drv = getOption("reproducible.drv"),
  conn = getOption("reproducible.conn", NULL)
)

rmFromCache(
  cacheRepo = getOption("reproducible.cachePath"),
  cacheIds,
  ask = getOption("reproducible.ask"),
  verbose = getOption("reproducible.verbose"),
  drv = getOption("reproducible.drv"),
  conn = getOption("reproducible.conn", NULL),
  format = getOption("reproducible.cacheSaveFormat", "rds"),
  dbTabNam = NULL,
  ...
)
}
\arguments{
\item{cachePath}{A path describing the directory in which to create
the database file(s)}

\item{drv}{A driver, passed to \code{dbConnect}}

\item{conn}{Either the character string of the path to the `fst` file that is the
cacheRepo file, or optionally (requires \code{DBI} and a DB backend such as \code{RSQLite})
a DBIConnection object, as returned by \code{dbConnect()}}

\item{force}{Logical. Should it create a cache in the \code{cachePath},
even if it already exists, overwriting.}

\item{obj}{The R object to save to the cache}

\item{userTags}{A character vector with descriptions of the Cache function call. These
will be added to the Cache so that this entry in the Cache can be found using
\code{userTags} e.g., via \code{\link{showCache}}.}

\item{cacheId}{The hash string representing the result of \code{CacheDigest(...)[[1]]}}

\item{linkToCacheId}{Optional. If a \code{cacheId} is provided here, then a \code{file.link}
will be made to the file with that \code{cacheId} name in the cache repo.
This is used when identical outputs exist in the cache. This will save disk space.}

\item{format}{The text string representing the file extension used normally by
different save formats; currently only \code{"rds"} or \code{"qs"}. Defaults
to \code{getOption("reproducible.cacheSaveFormat", "rds")}}

\item{sideEffect}{Character string identifying either: 1) the argument
(e.g., \code{"destionationPath"}
that describes either a filename where the function will write some side effect to,
or a folder name where 1 or more files will be written to; or 2) a folder
name where file-backed R objects that have a method for \code{Filenames} will
be placed (and their file-backed info will be updated accordingly). See Details.
If \code{FUN} has an argument `destinationPath`, then `Cache` will attempt to
use it, i.e., \code{sideEffect = "destinationPath"} will be set.
\emph{NOTE: this argument has changed as of V 1.2.9.9011 and may change in
future releases.}}

\item{cacheRepo}{A repository used for storing cached objects.
This is optional if \code{Cache} is used inside a SpaDES module.}

\item{cacheIds}{Either a character string with the cacheId of item to remove from
Cache repository, or a data.table coming from `showCache` with the items to remove.}

\item{verbose}{Numeric, -1 silent (where possible), 0 being very quiet,
1 showing more messaging, 2 being more messaging, etc.
Default is 1. Above 3 will output much more information about the internals of
Caching, which may help diagnose Caching challenges. Can set globally with an
option, e.g., \code{options('reproducible.verbose' = 0) to reduce to minimal}}

\item{...}{Arguments passed to \code{FUN} if FUN is provided as simply a function.}
}
\description{
Create a new cache

Low level tools to work with Cache
}
