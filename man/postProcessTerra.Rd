% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/postProcess.R
\name{postProcessTerra}
\alias{postProcessTerra}
\title{Alternative to \code{postProcess} that can accept and use \code{terra}}
\usage{
postProcessTerra(
  from,
  to,
  cropTo = to,
  projectTo = to,
  maskTo = to,
  writeTo = NULL,
  method = "bilinear",
  datatype = "FLT4S",
  overwrite = TRUE,
  ...
)
}
\arguments{
\item{from}{A RasterLayer, RasterStack, RasterBrick, SpatRaster to do one or more of:
crop, project, mask, and write}

\item{to}{A gridded (\code{Raster*} or \code{SpatRaster}) or polygonal
(\code{Spatial*}, \code{sf} or \code{Spat*}) class object which is the object
whose metadata will be the target for cropping, projecting, and masking of \code{from}.}

\item{cropTo}{Optional \code{Raster*}, \code{Spatial*}, \code{sf} or \code{Spat*} which,
if supplied, will supply the extent with which to crop \code{from}. To omit
cropping completed, set this to \code{NULL}. If supplied, this will be used instead of \code{to}
for the cropping step. Defaults to \code{to}}

\item{projectTo}{Optional \code{Raster*} or \code{SpatRaster} which,
if supplied, will supply the \code{crs}, \code{extent}, \code{res}, and \code{origin}
to project the \code{from} to. To omit projecting, set this to NULL.
If supplied, this will be used instead of \code{to}
for the projecting step. Defaults to \code{to}.}

\item{maskTo}{Optional \code{Spatial*}, \code{Raster*}, \code{sf} or \code{Spat*} which,
if supplied, will supply the extent with which to mask \code{from}. To omit
masking completed, set this to \code{NULL}. If supplied, this will be used instead of \code{to}
for the masking step. Defaults to \code{to}}

\item{writeTo}{Optional character string of a filename to use `writeRaster` to save the final
object. Default is \code{NULL}, which means there is no `writeRaster`}

\item{method}{Used if \code{projectTo} is not \code{NULL}, and is the method used for
interpolation. See \code{terra::project}}

\item{datatype}{A character string, used if \code{writeTo} is not \code{NULL}. See \code{raster::writeRaster}}

\item{overwrite}{Logical. Used if \code{writeTo} is not \code{NULL}}

\item{...}{Currently can be either \code{rasterToMatch}, \code{studyArea}, \code{filename2}
to allow backwards
compatibility with \code{postProcess}. \code{rasterToMatch} will be assigned to \code{to}
and \code{studyArea} will be assigned to \code{cropTo} & \code{maskTo}. These will override any values
passed to \code{to} or \code{maskTo}. \code{filename2} will be passed to \code{writeTo}.}
}
\value{
An object of the same class as \code{from}, but potentially cropped, projected, masked,
and written to disk.
}
\description{
This function provides a single step to achieve the GIS operations "crop", "project",
"mask" and possibly "write". It will use the \code{terra} and \code{sf} and \code{raster}
packages internally in an attempt to be as efficient as possible.
}
\details{
Currently, this will only work when \code{from} is a gridded object
 (either \code{Raster*} from raster or \code{Spat*} from terra).

Use case one is supply 2 gridded objects, \code{from} and \code{to}. This function
will make \code{from} look like \code{to}, i.e., the extent, projection, origin, and masking
where there are \code{NA} in the {to} will be the same as \code{from}.

Use case two is there is a Vector gis dataset
(e.g., \code{Spatial*} from \code{sp}, \code{sf} from \code{sf}, or
\code{SpatVector} from \code{terra}) that has information we want to impose on \code{from}.
It can be supplied as \code{to}, \code{projectTo}, \code{cropTo} or \code{maskTo}.

Use case three is a hybrid of use case 1 and 2: when \code{to} is supplied
but one or more of the other \code{*To} arguments, but a user
wants to override individual components of \code{to}.
When anything is supplied to one of the \code{*To} arguments, it will override
the \code{to} object for the specific step.
}
