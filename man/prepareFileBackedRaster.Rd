% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cache-helpers.R
\name{.prepareFileBackedRaster}
\alias{.prepareFileBackedRaster}
\title{Copy the file-backing of a file-backed Raster* object}
\usage{
.prepareFileBackedRaster(
  obj,
  repoDir = NULL,
  overwrite = FALSE,
  cacheId = NULL,
  drv = getOption("reproducible.drv"),
  conn = getOption("reproducible.conn", NULL),
  ...
)
}
\arguments{
\item{obj}{The raster object to save to the repository.}

\item{repoDir}{Character denoting an existing directory in which an artifact will be saved.}

\item{overwrite}{Logical. Should the raster be saved to disk, overwriting existing file.}

\item{cacheId}{Character string. If passed, this will override the calculated hash
of the inputs, and return the result from this cacheId in the cacheRepo.
Setting this is equivalent to manually saving the output of this function, i.e.,
the object will be on disk, and will be recovered in subsequent
This may help in some particularly finicky situations
where Cache is not correctly detecting unchanged inputs. This will guarantee
the object will be identical each time; this may be useful in operational code.}

\item{drv}{Either \code{"csv"} ( the default as of reproducible V 1.2.9) or
\code{"fst"} (as character strings), or an object that inherits from
\code{DBIDriver}, or an existing \code{DBIConnection} object
(in order to clone an existing connection). For these last two, user requires \code{DBI}
and a DB backend such as \code{RSQLite} to be installed.}

\item{conn}{Either the character string of the path to the `fst` file that is the
cacheRepo file, or optionally (requires \code{DBI} and a DB backend such as \code{RSQLite})
a DBIConnection object, as returned by \code{dbConnect()}}

\item{...}{Not used}
}
\value{
A raster object and its newly located file backing.
        Note that if this is a legitimate Cache repository, the new location
        will be a subdirectory called \file{rasters/} of \file{repoDir/}.
        If this is not a repository, the new location will be within \code{repoDir}.
}
\description{
Rasters are sometimes file-based, so the normal save and copy and assign
mechanisms in R don't work for saving, copying and assigning.
This function creates an explicit file copy of the file that is backing the raster,
and changes the pointer (i.e., \code{filename(object)}) so that it is pointing
to the new file.
}
\examples{
library(raster)
# make a cache repository
a <- Cache(rnorm, 1)

r <- raster(extent(0,10,0,10), vals = 1:100)

# write to disk manually -- will be in tempdir()
r <- writeRaster(r, file = tempfile())

# copy it to the cache repository
r <- .prepareFileBackedRaster(r, tempdir())

r # now in CacheStorageRasterDir(tempdir()) subfolder of tempdir()

}
\author{
Eliot McIntire
}
