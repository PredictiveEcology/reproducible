% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cache.R
\name{writeFuture}
\alias{writeFuture}
\title{Write to cache repository, using \code{future::future}}
\usage{
writeFuture(
  written,
  outputToSave,
  cacheRepo,
  userTags,
  drv = getOption("reproducible.drv"),
  conn = getOption("reproducible.conn", NULL),
  cacheId,
  linkToCacheId = NULL
)
}
\arguments{
\item{written}{Integer. If zero or positive then it needs to be written still.
Should be 0 to start.}

\item{outputToSave}{The R object to save to repository}

\item{cacheRepo}{The file path of the repository}

\item{userTags}{Character string of tags to attach to this \code{outputToSave} in
the \code{CacheRepo}}

\item{drv}{Either \code{"csv"} ( the default as of reproducible V 1.2.9) or
an object that inherits from
\code{DBIDriver}, or an existing \code{DBIConnection} object
(in order to clone an existing connection). For these last two, user requires \code{DBI}
and a DB backend such as \code{RSQLite} to be installed.}

\item{conn}{Either the character string of the path to the `csv` file that is the
cacheRepo file, or optionally (requires \code{DBI} and a DB backend such as \code{RSQLite})
a DBIConnection object, as returned by \code{dbConnect()}}

\item{cacheId}{Character string. If passed, this will override the calculated hash
of the inputs, and return the result from this cacheId in the cacheRepo.
Setting this is equivalent to manually saving the output of this function, i.e.,
the object will be on disk, and will be recovered in subsequent
This may help in some particularly finicky situations
where Cache is not correctly detecting unchanged inputs. This will guarantee
the object will be identical each time; this may be useful in operational code.}

\item{linkToCacheId}{Optional. If a \code{cacheId} is provided here, then a \code{file.link}
will be made to the file with that \code{cacheId} name in the cache repo.
This is used when identical outputs exist in the cache. This will save disk space.}
}
\description{
This will be used internally if \code{options("reproducible.futurePlan" = TRUE)}.
This is still experimental.
}
